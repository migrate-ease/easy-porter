#!/usr/bin/env python
# -*- coding: utf-8 -*-
# time: 2023/5/8 9:59
# file: filter_rules.py


class FilterRules(object):

    def __init__(self):
        # 除默认兼容文件(文本类等)外，其余文件都属于 待确认
        self.compatible_default_list = ['data', 'text', 'JSON', 'markdown', 'png', 'jpg', 'matlab', 'arff',
                                        'wav', 'gif', 'empty', 'YAML', 'dat', 'rdx', 'rds', 'ppt', 'xlsx', 'xls',
                                        'mod music', 'ASCII text', 'UTF-8 Unicode text', 'Bio-Rad .PIC Image File',
                                        'Hierarchical Data Format (version 5) data', 'HTML', 'PMML', 'XML',
                                        'TrueType font collection data', 'DIY-Thermocam raw data (Lepton 2.x)',
                                        'DIY-Thermocam raw data (Lepton 3.x)', 'rst', 'svg', 'block special',
                                        'character special', 'socket', 'symbolic', 'named pipe', 'npz',
                                        'zlib compressed data', 'makefile script', 'timezone data',
                                        'NetCDF Data Format data', 'HTML document', 'Embedded OpenType (EOT)',
                                        'Web Open Font Format', 'TrueType Font data', 'Algol 68 source',
                                        'very short file (no magic)', 'FITS image data', 'RIFF (little-endian) data',
                                        'GNU message catalog (little endian)', 'LaTeX document', 'LaTeX 2e document',
                                        'SAS 7+ data file', 'Composite Document File V2 Document',
                                        'PEM EC private key', 'database', 'font data', 'document', 'icon',
                                        'image', 'broken symbolic link', 'apache parquet', 'apache orc', 'apache avro',
                                        'dtd xml document', 'pem certificate', 'pure executable not stripped',
                                        'AppleDouble encoded Macintosh file', 'font ttf', 'icc color data']
        self.incompatible_default_list = [
            "dos executable", "dll", "dynamically linked shared library", '8086', 'assembler source', 'microsoft',
            "xcoff executable or object module not stripped", "pe32", 'mach-o', '80386', 'macintosh',
            'dos']
        self.suffix_dict = {
            '.jar': 'jar',
            '.py': 'py',
            '.pyc': 'pyc',
            '.txt': 'text',
            '.log': 'text',
            '.csv': 'text',
            '.utf8': 'text',
            '.jpg': 'text',
            '.png': 'text',
            '.gif': 'text',
            '.bin': 'ELF',
            '.so': 'ELF',
            '.jnilib': 'jnilib',
            '.lib': 'Windows lib',
            '.LIB': 'Windows lib',
            '.dll': 'Windows dll',
            '.DLL': 'Windows dll',
            '.dylib': 'Mac lib',
            '.framework': 'Mac lib',
            '.zip': 'zip',
            '.tar.gz': 'gzip',
            '.tgz': 'gzip',
            '.gz': 'gz',
            '.bz': 'bz',
            '.bz2': 'bz',
            '.xz': 'xz',
            '.tar': 'tar',
            '.sh': 'shell',
            '.c': 'c',
            '.C': 'c',
            '.go': 'go',
            '.md': 'markdown',
            '.js': 'js',
            '.mat': 'matlab',
            '.arff': 'arff',
            '.wav': 'wav',
            '.sql': 'text',
            '.java': 'java',
            '.class': 'java',
            '.pptx': 'ppt',
            '.ppt': 'ppt',
            '.dat': 'dat',
            '.rdx': 'rdx',
            '.rds': 'rds',
            '.xlsx': 'xlsx',
            '.mod': 'mod music',
            '.cpp': 'C++',
            '.CPP': 'C++',
            '.cc': 'C++',
            '.php': 'php',
            '.rb': 'Ruby',
            '.swift': 'Swift',
            '.cs': 'C#',
            '.dart': 'Dart',
            '.kt': 'Kotlin',
            '.scala': 'Scala',
            '.r': 'R',
            '.lua': 'Lua',
            '.perl': 'Perl',
            '.pl': 'Prolog',
            '.h': 'C header file',
            '.hpp': 'C++ header file',
            '.hxx': 'C++ header file',
            '.hh': 'C++ header file',
            '.m': 'Objective-C',
            '.mm': 'Objective-C++',
            '.ts': 'TypeScript',
            '.vue': 'Vue',
            '.s': 'Assembly',
            '.asm': 'Assembly',
            '.asp': 'ASP.NET',
            '.aspx': 'ASP.NET',
            '.jsp': 'Java Server Pages',
            '.htm': 'HTML',
            '.html': 'HTML',
            '.css': 'text',
            '.xml': 'text',
            '.json': 'text',
            '.yml': 'YAML',
            '.yaml': 'YAML',
            '.bat': 'Windows',
            '.cmd': 'Windows',
            '.vbs': 'VBScript',
            '.vbscript': 'VBScript',
            '.ps1': 'PowerShell Script',
            '.coffee': 'CoffeeScript',
            '.less': 'Less',
            '.sass': 'Sass',
            '.scss': 'Sass',
            '.pmml': 'PMML',
            '.whl': 'whl',
            '.rst': 'rst',
            '.svg': 'svg',
            '.SVG': 'svg',
            '.pom': 'pom',
            ".rpm": "rpm",
            ".egg": "egg",
            ".deb": "deb",
            ".ear": "ear",
            ".gzip": "gzip",
            ".lzma": "lzma",
            ".npz": "npz",
            ".a": 'lib',
            ".dict": 'data',
            ".db": 'database',
            ".dtd": 'dtd xml document',
            ".pem": 'pem certificate',
            ".ttf": 'font ttf',
            ".icc": 'icc color data',
            ".properties": 'text',
            ".vm": 'text',
            ".xsd": 'text',
            ".groovy": 'text',
            ".ico": 'text',
            ".exsd": "text"
        }
        self.python_flag = ["Brotli", "Cython", "Fiona", "Levenshtein", "Levenshtein-search", "Mosek", "OpenBLAS",
                            "Pillow", "PyYAML", "Rtree", "Shapely", "advent-of-code", "aiohttp", "ansible-pylibssh",
                            "apache-beam", "arrow", "awkward", "backports.zoneinfo", "bcrypt", "biopython", "blosc",
                            "blosc2", "brotlicffi", "btrees", "cassandra-driver", "cffi", "cftime", "clevercsv",
                            "clickhouse-cityhash", "cmake", "cmarkgfm", "connected-components-3d", "coverage",
                            "crc32c", "crcmod", "crypto", "cryptography", "cvxopt", "ddtrace", "deap", "dimod",
                            "distributed", "doublemetaphone", "dulwich", "editdistance", "ephem", "fastavro",
                            "fastcluster", "fastnumbers", "fastobo", "fastrlock", "fbprophet", "featuretools",
                            "ffmpeg", "future", "gensim", "gevent", "geventhttpclient", "glfw", "google-crc32c",
                            "greenlet", "grpcio", "grpcio-tools", "guppy3", "h3", "h5py", "hiredis", "httptools",
                            "igraph", "ijson", "imageio-ffmpeg", "iminuit", "immutables", "jellyfish", "jpype1",
                            "kiwisolver", "lazy-object-proxy", "lightgbm", "line-profiler", "llvmlite", "lukeparser",
                            "lxml", "lz4", "markupsafe", "matplotlib", "maturin", "mecab_python3", "mmh3", "mocpy",
                            "mojimoji", "msgpack", "multidict", "mwparserfromhell", "netcdf4", "ninja", "nmslib",
                            "numba", "numexpr", "numpy", "numpy-quaternion", "odps", "onnx", "onnxruntime",
                            "opencv-python", "opencv_python_headless", "orjson", "osqp", "pandas", "persistent",
                            "pmdarima", "proces", "protobuf", "psd-tools", "psutil", "pyagrum", "pyagrum-nightly",
                            "pyarrow", "pycares", "pyclipper", "pycrypto", "pycryptodome", "pycryptodomex", "pydantic",
                            "pygame", "pygeos", "pygit2", "pyglm", "pyhacrf-datamade", "pyinstrument", "pylbfgs",
                            "pymango", "pillow", "pkuseg", "requests", "sqlalchemy", "visvalingamwyatt", "torchvision",
                            "pymongo", "pymupdf", "pynacl", "pyod", "pyodps", "pyonmttok", "pyorc", "pyproj", "pyreadr",
                            "pyreadstat", "pysimdjson", "pystan", "python-igraph", "python-rapidjson", "python-sat",
                            "python-snappy", "pytokenizations", "pywavelets", "pyzmq", "rapidfuzz", "rdp", "regex",
                            "rjsmin", "ruptures", "schema-salad", "scikit-image", "scikit_learn", "scipy", "scrypt",
                            "selectolax", "sentencepiece", "setproctitle", "simplejson", "sklearn", "spglib",
                            "sqlfluff", "statsmodels", "subprocess32", "tensorflow", "tokenizers", "torch", 'bs4',
                            "tornado", "traits", "triangle", "typed_ast", "uarray", "ujson", "uvloop", "urllib",
                            "websockets", "wrapt", "xgboost", "xxhash", "yarl", "zodbpickle", "zope.hookable",
                            "zope.interface", "zope.proxy", "zstandard", 'py3', 'cp37', 'python3', '37m', 'py2',
                            'cp27', 'python2', "venv", 'py', 'jieba', 'six', 'pinyin', 'idna', 'certifi', 'tf', 'env',
                            'joblib', 'pulp', 'amply', 'geohash', 'tsfel', 'docutils', 'scikit', 'geopy', 'filterpy',
                            'cn2an', 'networkx', 'ortools', 'dateutil', 'pytz', 'pylangtools', 'threadpoolctl',
                            'pypackages', 'pylib', 'alink', 'asdf', 'fim', 'algo', 'gsd', 'oss', 'zstd', 'np',
                            'skimage', 'package', 'utils', 'alley', 'cv2', 'cv', 'pkg', 'pwlf', 'transformers',
                            'intern', 'deps', 'prophet', 'depends', 'lw', 'deepctr', 'click', 'setuptools', 'wrapt',
                            'geographiclib', 'ffmpeg', 'fuzzywuzzy', 'extract']

        self.python_library_dict = {
            'grpcio': 'grpc',
            'pyzmq': 'pyzmq.libs',
            'Fiona': 'fiona',
            'Shapely': 'shapely',
            'levenshtein': 'Levenshtein',
            'Rtree': 'Rtree.libs',
            'pycryptodome': 'Crypto',
            'pycrypto': 'Crypto',
            'protobuf': 'google',
            'scikit-image': 'scikit-image.libs',
            'backports.zoneinfo': 'backports',
            'fe4odps': 'fe',
            'mypyodps': 'myodps',
            'pyodps': 'odps',
            'opencv_python_headless': 'cv2',
            'opencv_contrib_python_headless': 'cv2',
            'opencv_python': 'cv2',
            'mmh3': 'subprocess32 or cffi',
            'kiwisolver': 'subprocess32 or cffi',
        }

        self.specify_name = ["kotlin-jupyter-api-annotations", "snappy", "bytecompressor-jsnappy", "snappy-java",
                             "spymemcached", "p6spy", "spy-sql", "pythagoras", "loopy"]

        self.link_file = "symbolic link to"
        self.compatible_file = "MANIFEST.MF"


fr = FilterRules()
compatible_default_list = fr.compatible_default_list
suffix_dict = fr.suffix_dict
python_flag = fr.python_flag
specify_name = fr.specify_name
python_library_dict = fr.python_library_dict
incompatible_default_list = fr.incompatible_default_list
link_file = fr.link_file
compatible_file = fr.compatible_file
